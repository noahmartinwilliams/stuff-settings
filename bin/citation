#! /usr/bin/swipl -q

% TODO: modify this to read HTML web pages and extract citation info automagically
:- initialization(main).
:- use_module(library(prosqlite)).
:- use_module(library(sgml)).

contains_tag(Tag, E):- \+ does_not_contain_tag(Tag, E).

does_not_contain_tag(_, []):- !.
does_not_contain_tag(Tag, [element(Tag, _, _)|_]):- !, fail.
does_not_contain_tag(Tag, [element(_, _, List)|Rest]):- !,
	does_not_contain_tag(Tag, List), !,
	does_not_contain_tag(Tag, Rest), !.
does_not_contain_tag(Tag, [_|Rest]):-
	does_not_contain_tag(Tag, Rest), !.

is_site_name([]):- !, fail.
is_site_name([property = 'og:site_name' | _]).
is_site_name([_ | Rest]):- is_site_name(Rest).

get_site_name_intern([content = Name|_], Name).
get_site_name_intern([_ | Rest], Ret):- get_site_name_intern(Rest, Ret).

get_site_name([], _):- !, fail.
get_site_name([element('meta', List, _)|_], Name):- is_site_name(List), get_site_name_intern(List, Name).
get_site_name([element(_, _, List)|_], Name):- get_site_name(List, Name).
get_site_name([_|Rest], Name):- get_site_name(Rest, Name).

extract_text([], '').
extract_text([element(_, _, L)|Rest], Ret):- !,
	extract_text(L, R1),
	extract_text(Rest, R2),
	atomic_concat(R1, R2, Ret).
extract_text([E|Rest], Ret):-
	extract_text(Rest, R1),
	atomic_concat(E, R1, Ret).

get_title(Html, Ret):- get_title_tag_data(Html, Ret1),
	atom_concat(Ret, ' - The New York Times', Ret1).
get_title(Html, Ret):- get_title_tag_data(Html, Ret1),
	atom_concat(Ret, ' | Alternet', Ret1).
get_title(Html, Ret):- get_title_tag_data(Html, Ret).

get_title_tag_data([], _):- !, fail.
get_title_tag_data([element(title, _, Text)|_], Ret):- !, extract_text(Text, Ret).
get_title_tag_data([element(_, _, Data)|_], Ret):- get_title_tag_data(Data, Ret).
get_title_tag_data([element(_, _, _)|Rest], Ret):- !, get_title_tag_data(Rest, Ret).
get_title_tag_data([_|Rest], Ret):- get_title_tag_data(Rest, Ret).


is_publish_date([]):- !, fail.
is_publish_date([itemprop = 'datePublished'|_]).
is_publish_date([_|Rest]):- is_publish_date(Rest).

%<meta property="article:published" itemprop="datePublished" content="2012-09-10T21:00:24-04:00" />
convert_date(Date, Date2):- atom_concat(Year, Rest, Date),
	atom_length(Year, 4),
	atom_concat('-', Rest2, Rest),
	atom_concat(Month, Rest3, Rest2),
	atom_length(Month, 2),
	atom_concat('-', Rest4, Rest3),
	atom_concat(Day, Rest5, Rest4),
	atom_length(Day, 2),
	atom_concat('T', Rest6, Rest5),
	atom_concat(Hour, Rest7, Rest6),
	atom_length(Hour, 2),
	atom_concat(':', Rest8, Rest7),
	atom_concat(Minute, _, Rest8),
	atom_length(Minute, 2),
	make_date(Year, Month, Day, Hour, Minute, Date2).

make_date(Year, Month, Day, Hour, Minute, Ret):-
	atom_concat(Year, '/', Date),
	atom_concat(Date, Month, Date1),
	atom_concat(Date1, '/', Date2),
	atom_concat(Date2, Day, Date3),
	atom_concat(Date3, ',', Date4),
	atom_concat(Date4, Hour, Date5),
	atom_concat(Date5, ':', Date6),
	atom_concat(Date6, Minute, Ret).

get_date_published_intern([], _):- !, fail.
get_date_published_intern([content = Date|_], Date2):- convert_date(Date, Date2).
get_date_published_intern([_|Rest], Date):- get_date_published_intern(Rest, Date).

get_date_published([], _):- !, fail.
get_date_published([element(meta, PublishInfo, _)|_], Date):- is_publish_date(PublishInfo), get_date_published_intern(PublishInfo, Date).
get_date_published([element(_, _, Rest)|_], Date):- get_date_published(Rest, Date).
get_date_published([_|Rest], Date):- get_date_published(Rest, Date).

doesnt_contain_item(_,[]).
doesnt_contain_item(W, [W | _ ]):- !, fail.
doesnt_contain_item(W, [_|Rest]):- doesnt_contain_item(W, Rest).

contains_list(List):- \+ doesnt_contain_item('-l', List).
contains_points(List):- \+ doesnt_contain_item('-p', List).
contains_citation(List):- \+ doesnt_contain_item('-c', List).
contains_add(List):- \+ doesnt_contain_item('-a', List).
contains_url(List):- \+ doesnt_contain_item('-u', List).

get_home(Home):- getenv('HOME', Home).
connect_db:- get_home(Home),
	atomic_concat(Home, '/data/db/citations', Atom),
	sqlite_connect(Atom, 'citations').
disconnect_db:- sqlite_disconnect('citations').

point(Id, Name):- sqlite_query('citations', 'SELECT id, point FROM points;', row(Id, Name)).
citation(PointId, Author, Title, Container, Contributors, Version, Number, Publisher, PubDate, AccDate, Location):-
	nonvar(PointId),
	atomic_concat('SELECT citeId FROM pointConn WHERE pointId == ', PointId, Atom0),
	atomic_concat(Atom0, ';', Atom1),
	sqlite_query('citations', Atom1, row(PointId2)),
	atomic_concat('SELECT author, title, container, contributors, version, number, publisher, pubDate, accessDate, location FROM citation WHERE contributors == ', PointId2, Command0), %I screwed up the formatting of the database initially. :/
	atomic_concat(Command0, ';', Command1),
	sqlite_query('citations', Command1, row(AuthorId, Title, ContainerId, ContributorsId, Version, Number, PublisherId, PubDate, AccDate, Location)),
	contributors(ContributorsId, Contributors),
	publisher(PublisherId, Publisher),
	container(ContainerId, Container),
	author(AuthorId, Author).

author(Id, Auth):- atom_number(Atom, Id),
	atomic_concat('SELECT name FROM author WHERE id == ', Atom, Command0),
	atomic_concat(Command0, ';', Command1),
	sqlite_query('citations', Command1, row(Auth)).

container(Id, Cont):- atom_number(Atom, Id),
	atomic_concat('SELECT name FROM container WHERE id == ', Atom, Command0),
	atomic_concat(Command0, ';', Command1),
	sqlite_query('citations', Command1, row(Cont)).

publisher(Id, Pub):- atom_number(Atom, Id),
	atomic_concat('SELECT name FROM publisher WHERE id == ', Atom, Command0),
	atomic_concat(Command0, ';', Command1),
	sqlite_query('citations', Command1, row(Pub)).

contributors(ContributorsId, Contributors):- 
	atom_number(Atom, ContributorsId),
	atomic_concat('SELECT id1 FROM contributors WHERE id0 == ', Atom, Command0),
	atomic_concat(Command0, ';', Command1),
	findall(Contributor, sqlite_query('citations', Command1, row(Contributor)), Contributors).

get_point([], _):- !, fail.
get_point(['-p', Val|_], Val).
get_point([_|Rest], Ret):- get_point(Rest, Ret).

get_url([], _):- !, fail.
get_url(['-u', Url|_], Url).
get_url([_|Rest], Ret):- get_url(Rest, Ret).

write_points([]).
write_points([[Id, Name] | Rest]):-
	atom_number(Atom, Id),
	write(Atom),
	write(':'),
	writeln(Name),
	write_points(Rest).

write_citation([]):- writeln('').
write_citation([[]|Tail]):-
	write_citation(Tail).

write_citation([''|Tail]):-
	write_citation(Tail).

write_citation([Head|Tail]):-
	write(Head),
	write('. '),
	write_citation(Tail).

write_citations([]).
write_citations([Head|Tail]):-
	write_citation(Head),
	write_citations(Tail).

get_tmp_name(TmpName):-
	process_create(path(mktemp), ['-u', '--suffix=.html'], [stdout(pipe(Out))]), 
	read_line_to_codes(Out, Str), 
	atom_codes(TmpName, Str).

dload(Url, Name):-
	process_create(path(wget), ['-O', Name, '--quiet', Url], []).

on_backtrack(_).
on_backtrack(G):- !, G, fail.
%main_intern:- current_prolog_flag(argv, Argv),
	%contains_add(Argv),
	%get_url(Argv, Url),
	%get_tmp_name(TmpName),
	%on_backtrack(delete_file(TmpName)),
	%dload(Url, TmpName),
	%load_html(TmpName, Elements, [syntax_errors(quiet)]),
	%get_title(Elements, Name),
	%writeln(Name),
	%%get_site_name(Elements, SiteName),
	%%writeln(SiteName),
	%get_date_published(Elements, PublishDate),
	%writeln(PublishDate),
	%delete_file(TmpName),
	%halt.
main_intern:- current_prolog_flag(argv, Argv),
	contains_list(Argv),
	contains_citation(Argv),
	contains_points(Argv),
	get_point(Argv, Point),
	findall(Citation, (citation(Point, Author, Title, Container, Contributors, Version, Number, Publisher, PubDate, AccDate, Location), Citation=[Author, Title, Container, Contributors, Version, Number, Publisher, PubDate, AccDate, Location]), List),
	write_citations(List),
	disconnect_db,
	halt.

main_intern:- current_prolog_flag(argv, Argv), 
	contains_list(Argv), 
	contains_points(Argv),
	findall(Point, (point(Id, Name), Point=[Id, Name]), Points),
	write_points(Points),
	disconnect_db,
	halt.

main_intern:- disconnect_db, halt.
main:- connect_db, main_intern.
